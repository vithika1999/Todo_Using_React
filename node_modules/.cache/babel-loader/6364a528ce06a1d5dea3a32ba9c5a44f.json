{"ast":null,"code":"var _jsxFileName = \"C:\\\\New folder\\\\react-typescript-taskify-master\\\\src\\\\components\\\\TodoList.tsx\";\nimport React from \"react\";\nimport SingleTodo from \"./SingleTodo\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = ({\n  todos,\n  setTodos,\n  CompletedTodos,\n  setCompletedTodos\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"TodosList\",\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `todos ${snapshot.isDraggingOver ? \"dragactive\" : \"\"}`,\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"todos__heading\",\n          children: \"Active Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), todos === null || todos === void 0 ? void 0 : todos.map((todo, index) => /*#__PURE__*/_jsxDEV(SingleTodo, {\n          index: index,\n          todos: todos,\n          todo: todo,\n          setTodos: setTodos\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"TodosRemove\",\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        className: `todos  ${snapshot.isDraggingOver ? \"dragcomplete\" : \"remove\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"todos__heading\",\n          children: \"Completed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), CompletedTodos === null || CompletedTodos === void 0 ? void 0 : CompletedTodos.map((todo, index) => /*#__PURE__*/_jsxDEV(SingleTodo, {\n          index: index,\n          todos: CompletedTodos,\n          todo: todo,\n          setTodos: setCompletedTodos\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/New folder/react-typescript-taskify-master/src/components/TodoList.tsx"],"names":["React","SingleTodo","Droppable","TodoList","todos","setTodos","CompletedTodos","setCompletedTodos","provided","snapshot","isDraggingOver","innerRef","droppableProps","map","todo","index","id","placeholder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,SAAT,QAA0B,qBAA1B;;;AASA,MAAMC,QAAyB,GAAG,CAAC;AACjCC,EAAAA,KADiC;AAEjCC,EAAAA,QAFiC;AAGjCC,EAAAA,cAHiC;AAIjCC,EAAAA;AAJiC,CAAD,KAK5B;AACJ,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAC,WAAvB;AAAA,gBACG,CAACC,QAAD,EAAWC,QAAX,kBACC;AACE,QAAA,SAAS,EAAG,SAAQA,QAAQ,CAACC,cAAT,GAA0B,YAA1B,GAAyC,EAAG,EADlE;AAEE,QAAA,GAAG,EAAEF,QAAQ,CAACG,QAFhB;AAAA,WAGMH,QAAQ,CAACI,cAHf;AAAA,gCAKE;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAMGR,KANH,aAMGA,KANH,uBAMGA,KAAK,CAAES,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,kBACV,QAAC,UAAD;AACE,UAAA,KAAK,EAAEA,KADT;AAEE,UAAA,KAAK,EAAEX,KAFT;AAGE,UAAA,IAAI,EAAEU,IAHR;AAKE,UAAA,QAAQ,EAAET;AALZ,WAIOS,IAAI,CAACE,EAJZ;AAAA;AAAA;AAAA;AAAA,gBADD,CANH,EAeGR,QAAQ,CAACS,WAfZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,eAsBE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAC,aAAvB;AAAA,gBACG,CAACT,QAAD,EAAWC,QAAX,kBACC;AACE,QAAA,GAAG,EAAED,QAAQ,CAACG,QADhB;AAAA,WAEMH,QAAQ,CAACI,cAFf;AAGE,QAAA,SAAS,EAAG,UACVH,QAAQ,CAACC,cAAT,GAA0B,cAA1B,GAA2C,QAC5C,EALH;AAAA,gCAOE;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,EAQGJ,cARH,aAQGA,cARH,uBAQGA,cAAc,CAAEO,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,kBACnB,QAAC,UAAD;AACE,UAAA,KAAK,EAAEA,KADT;AAEE,UAAA,KAAK,EAAET,cAFT;AAGE,UAAA,IAAI,EAAEQ,IAHR;AAKE,UAAA,QAAQ,EAAEP;AALZ,WAIOO,IAAI,CAACE,EAJZ;AAAA;AAAA;AAAA;AAAA,gBADD,CARH,EAiBGR,QAAQ,CAACS,WAjBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD,CAtDD;;KAAMd,Q;AAwDN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { Todo } from \"../models/models\";\nimport SingleTodo from \"./SingleTodo\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\ninterface props {\n  todos: Array<Todo>;\n  setTodos: React.Dispatch<React.SetStateAction<Array<Todo>>>;\n  setCompletedTodos: React.Dispatch<React.SetStateAction<Array<Todo>>>;\n  CompletedTodos: Array<Todo>;\n}\n\nconst TodoList: React.FC<props> = ({\n  todos,\n  setTodos,\n  CompletedTodos,\n  setCompletedTodos,\n}) => {\n  return (\n    <div className=\"container\">\n      <Droppable droppableId=\"TodosList\">\n        {(provided, snapshot) => (\n          <div\n            className={`todos ${snapshot.isDraggingOver ? \"dragactive\" : \"\"}`}\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            <span className=\"todos__heading\">Active Tasks</span>\n            {todos?.map((todo, index) => (\n              <SingleTodo\n                index={index}\n                todos={todos}\n                todo={todo}\n                key={todo.id}\n                setTodos={setTodos}\n              />\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n      <Droppable droppableId=\"TodosRemove\">\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            className={`todos  ${\n              snapshot.isDraggingOver ? \"dragcomplete\" : \"remove\"\n            }`}\n          >\n            <span className=\"todos__heading\">Completed Tasks</span>\n            {CompletedTodos?.map((todo, index) => (\n              <SingleTodo\n                index={index}\n                todos={CompletedTodos}\n                todo={todo}\n                key={todo.id}\n                setTodos={setCompletedTodos}\n              />\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </div>\n  );\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}