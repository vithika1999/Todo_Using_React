{"ast":null,"code":"var _jsxFileName = \"C:\\\\New folder\\\\react-typescript-taskify-master\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport InputField from \"./components/InputField\";\nimport TodoList from \"./components/TodoList\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todo, setTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [CompletedTodos, setCompletedTodos] = useState([]);\n\n  const handleAdd = e => {\n    e.preventDefault();\n\n    if (todo) {\n      setTodos([...todos, {\n        id: Date.now(),\n        todo,\n        isDone: false\n      }]);\n      setTodo(\"\");\n    }\n  };\n\n  const onDragEnd = result => {\n    const {\n      destination,\n      source\n    } = result;\n    console.log(result);\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    let add;\n    let active = todos;\n    let complete = CompletedTodos; // Source Logic\n\n    if (source.droppableId === \"TodosList\") {\n      add = active[source.index];\n      active.splice(source.index, 1);\n    } else {\n      add = complete[source.index];\n      complete.splice(source.index, 1);\n    } // Destination Logic\n\n\n    if (destination.droppableId === \"TodosList\") {\n      active.splice(destination.index, 0, add);\n    } else {\n      complete.splice(destination.index, 0, add);\n    }\n\n    setCompletedTodos(complete);\n    setTodos(active);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"heading\",\n        children: \"Taskify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        todo: todo,\n        setTodo: setTodo,\n        handleAdd: handleAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        setTodos: setTodos,\n        CompletedTodos: CompletedTodos,\n        setCompletedTodos: setCompletedTodos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"0ODy7xZInng5ZMwT1ktJxZhAnKc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/New folder/react-typescript-taskify-master/src/App.tsx"],"names":["React","useState","InputField","TodoList","DragDropContext","App","todo","setTodo","todos","setTodos","CompletedTodos","setCompletedTodos","handleAdd","e","preventDefault","id","Date","now","isDone","onDragEnd","result","destination","source","console","log","droppableId","index","add","active","complete","splice"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport InputField from \"./components/InputField\";\nimport TodoList from \"./components/TodoList\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { Todo } from \"./models/models\";\n\nconst App: React.FC = () => {\n  const [todo, setTodo] = useState<string>(\"\");\n  const [todos, setTodos] = useState<Array<Todo>>([]);\n  const [CompletedTodos, setCompletedTodos] = useState<Array<Todo>>([]);\n\n  const handleAdd = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (todo) {\n      setTodos([...todos, { id: Date.now(), todo, isDone: false }]);\n      setTodo(\"\");\n    }\n  };\n\n  const onDragEnd = (result: DropResult) => {\n    const { destination, source } = result;\n\n    console.log(result);\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    let add;\n    let active = todos;\n    let complete = CompletedTodos;\n    // Source Logic\n    if (source.droppableId === \"TodosList\") {\n      add = active[source.index];\n      active.splice(source.index, 1);\n    } else {\n      add = complete[source.index];\n      complete.splice(source.index, 1);\n    }\n\n    // Destination Logic\n    if (destination.droppableId === \"TodosList\") {\n      active.splice(destination.index, 0, add);\n    } else {\n      complete.splice(destination.index, 0, add);\n    }\n\n    setCompletedTodos(complete);\n    setTodos(active);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"App\">\n        <span className=\"heading\">Taskify</span>\n        <InputField todo={todo} setTodo={setTodo} handleAdd={handleAdd} />\n        <TodoList\n          todos={todos}\n          setTodos={setTodos}\n          CompletedTodos={CompletedTodos}\n          setCompletedTodos={setCompletedTodos}\n        />\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}